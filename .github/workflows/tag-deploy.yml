name: Tag Deploy

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-rc.*'
  workflow_dispatch:
    inputs:
      force:
        description: 'Force deploy latest successful main build to production hosting'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_DEPLOY_TOKEN }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install minimal deps
        run: npm ci --omit=dev

      - name: Install firebase-tools
        run: npm install -g firebase-tools

      - name: Validate secrets
        run: |
          if [ -z "$FIREBASE_TOKEN" ]; then echo 'Missing FIREBASE_DEPLOY_TOKEN' >&2; exit 1; fi
          if [ -z "$FIREBASE_PROJECT_ID" ]; then echo 'Missing FIREBASE_PROJECT_ID' >&2; exit 1; fi

      - name: Determine channel
        id: channel
        run: |
          REF="${GITHUB_REF#refs/tags/}"
          if [[ "$REF" == *-rc.* ]]; then
            echo 'channel=canary' >> $GITHUB_OUTPUT
          else
            echo 'channel=live' >> $GITHUB_OUTPUT
          fi
          echo "Detected tag: $REF"

      - name: Download latest main build artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ci.yml
          branch: main
          name: web-build
          path: build
        continue-on-error: true

      - name: Fallback build if artifact missing
        if: !exists('build')
        env:
          REACT_APP_FIREBASE_API_KEY: ${{ vars.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ vars.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ vars.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ vars.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ vars.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ vars.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_DATABASE_URL: ${{ vars.REACT_APP_FIREBASE_DATABASE_URL }}
        run: |
          echo "Artifact missing; performing local build fallback."; npm run build

      - name: Detect functions changes vs main
        id: fn
        run: |
          git fetch origin main --depth=1 || true
          if git diff --name-only origin/main...HEAD | grep '^functions/' >/dev/null 2>&1; then
            echo "functions_changed=true" >> $GITHUB_OUTPUT
          else
            echo "functions_changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Install functions deps (only if changed)
        if: steps.fn.outputs.functions_changed == 'true'
        run: (cd functions && npm ci --omit=dev)

      - name: Deploy live
        if: steps.channel.outputs.channel == 'live' || inputs.force == 'true'
        run: |
          if [ "${{ steps.fn.outputs.functions_changed }}" = 'true' ]; then
            firebase deploy --only hosting,functions --project $FIREBASE_PROJECT_ID --token "$FIREBASE_TOKEN" --non-interactive
          else
            firebase deploy --only hosting --project $FIREBASE_PROJECT_ID --token "$FIREBASE_TOKEN" --non-interactive
          fi

      - name: Deploy canary preview channel
        if: steps.channel.outputs.channel == 'canary'
        run: |
          firebase hosting:channel:deploy canary --project $FIREBASE_PROJECT_ID --token "$FIREBASE_TOKEN" --expires 7d
