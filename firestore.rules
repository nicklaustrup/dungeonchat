rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read any profile but only write their own
    match /userProfiles/{userId} {
      allow read: if request.auth != null; // Allow authenticated users to read any profile
      allow write: if request.auth != null && request.auth.uid == userId; // Only allow writing own profile
    }
    
    // Username collection for availability checking
    // Users can read to check availability and write their own username entries
    match /usernames/{username} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (resource == null || resource.data.uid == request.auth.uid) &&
        request.resource.data.uid == request.auth.uid;
    }
    
    // Messages collection - users can read all messages and write their own
    match /messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      // Allow message author to update/delete their own messages
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
      // Allow any authenticated user to update reactions field only
      allow update: if request.auth != null && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reactions']) &&
        request.resource.data.keys().hasAll(resource.data.keys().removeAll(['reactions']));
    }
    
    // Presence collection - users can read all and write their own
    match /presence/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}